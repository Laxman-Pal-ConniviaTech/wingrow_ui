{"version":3,"file":"static/js/910.d14ccac0.chunk.js","mappings":"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","sources":["Routes/Register.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Button from \"@mui/material/Button\";\nimport TextField from \"@mui/material/TextField\";\nimport Grid from \"@mui/material/Grid\";\nimport Typography from \"@mui/material/Typography\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport AuthService from \"../services/auth.service\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport Spinner from \"../components/Spinner\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nconst user = AuthService.getCurrentUser();\n\nconst KeyCodes = {\n  comma: 188,\n  enter: 13,\n};\n\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\n\nexport default function Register() {\n  useEffect(() => {\n    if (!!user) {\n      AuthService.logout();\n      window.location.reload();\n    }\n  }, []);\n\n  const navigate = useNavigate();\n  const [Loading, setLoading] = useState(false);\n  const [data, setData] = useState({\n    phone: \"\",\n    password: \"\",\n    firstname: \"\",\n    lastname: \"\",\n    type: \"\",\n    farmertype: \"\",\n    address: \"\",\n  });\n\n  const [tags, setTags] = React.useState([]);\n  const [error, seterror] = useState(\"\");\n\n  const handleDelete = (i) => {\n    setTags(tags.filter((tag, index) => index !== i));\n  };\n\n  const handleAddition = (tag) => {\n    setTags([...tags, tag]);\n  };\n\n  const handleDrag = (tag, currPos, newPos) => {\n    const newTags = tags.slice();\n\n    newTags.splice(currPos, 1);\n    newTags.splice(newPos, 0, tag);\n\n    // re-render\n    setTags(newTags);\n  };\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setData((prev) => {\n      return {\n        ...prev,\n        [name]: value,\n      };\n    });\n  };\n\n  const handleSubmit = (event) => {\n    seterror(\"\");\n    event.preventDefault();\n    const { phone, firstname, lastname, farmertype, type, password } = data;\n\n    if (!phone.match(\"[0-9]{10}\")) {\n      seterror(\"Please provide valid phone number\");\n    } else if (firstname.length === 0 && lastname.length === 0) {\n      seterror(\"Please provide valid first and last name\");\n    } else if (type.length === 0) {\n      seterror(\"Please select type\");\n    } else if (password.length < 6) {\n      seterror(\"password must be greater than 6 characters\");\n    } else if (type === \"farmer\" && farmertype.length === 0) {\n      seterror(\"select producer type\");\n    } else if (type === \"farmer\" && tags.length === 0) {\n      seterror(\"select atleast one commodity and press enter\");\n    } else {\n      seterror(\"no error\");\n      setLoading(true);\n      AuthService.register(\n        data.phone,\n        data.password,\n        data.firstname,\n        data.lastname,\n        data.type,\n        data.farmertype,\n        data.address,\n        tags\n      ).then(\n        () => {\n          toast.success(\"Registration successful!\", {\n            position: \"top-center\",\n            autoClose: 3000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n          });\n          setTimeout(() => {\n            navigate(\"/registeration-successfull\");\n            window.location.reload();\n          }, 1000);\n        },\n        (error) => {\n          toast.warn(\"User Already Exists\", {\n            position: \"top-center\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            draggable: true,\n            progress: undefined,\n            theme: \"light\",\n          });\n          setData({\n            phone: \"\",\n            password: \"\",\n            firstname: \"\",\n            lastname: \"\",\n            type: \"\",\n            farmertype: \"\",\n            address: \"\",\n          });\n          setTimeout(() => {\n            navigate(\"/login\");\n            window.location.reload();\n          }, 1000);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"authContainer\">\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n        color=\"success\"\n      />\n      {/* Same as */}\n      <ToastContainer />\n      {!Loading ? (\n        <div className=\"authbox\">\n          <img\n            className=\"login_image\"\n            src=\"./images/slidestall2.webp\"\n            alt=\"logo\"\n          />\n          <form\n            className=\"register_details\"\n            component=\"form\"\n            noValidate\n            onSubmit={handleSubmit}\n            sx={{ mt: 3 }}\n          >\n            <img className=\"form-logo\" src=\"./logo.png\"  alt=\"form-logo\" />\n            <Typography className=\"form-heading\" component=\"h1\" variant=\"h5\">\n              Welcome to Wingrowagritech\n            </Typography>\n            <Typography className=\"form-heading\" mt={2} component=\"h1\" variant=\"h5\">\n              Signup with us\n            </Typography>\n            <Grid className=\"input-div-holder\" container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  inputlabelprops={{\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\n                  }}\n                  autoComplete=\"given-name\"\n                  name=\"firstname\"\n                  value={data.firstname}\n                  onChange={handleChange}\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  color=\"success\"\n                  className=\"textfield\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  inputlabelprops={{\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\n                  }}\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastname\"\n                  value={data.lastname}\n                  onChange={handleChange}\n                  autoComplete=\"family-name\"\n                  color=\"success\"\n                  className=\"textfield\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  inputlabelprops={{\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\n                  }}\n                  required\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Mobile Number\"\n                  name=\"phone\"\n                  value={data.phone}\n                  onChange={handleChange}\n                  color=\"success\"\n                  className=\"textfield\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  inputlabelprops={{\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\n                  }}\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  id=\"password\"\n                  value={data.password}\n                  onChange={handleChange}\n                  autoComplete=\"new-password\"\n                  color=\"success\"\n                  className=\"textfield\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControl\n                  className=\"textfield\"\n                  sx={{ width: \"100%\", fontSize: 14 }}\n                >\n                  <InputLabel\n                    inputlabelprops={{\n                      style: { fontSize: 14, fontFamily: \"monospace\" },\n                    }}\n                    id=\"demo-simple-select-helper-label\"\n                  >\n                    Type\n                  </InputLabel>\n                  <Select\n                    sx={{ fontSize: \"1.2rem\" }}\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={data.type}\n                    label=\"Type\"\n                    name=\"type\"\n                    onChange={handleChange}\n                    color=\"success\"\n                  >\n                    <MenuItem\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                      value=\"\"\n                    >\n                      <em>Select</em>\n                    </MenuItem>\n                    <MenuItem\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                      value={\"farmer\"}\n                    >\n                      Producer\n                    </MenuItem>\n                    <MenuItem\n                      sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                      value={\"customer\"}\n                    >\n                      Consumer\n                    </MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n\n              {data.type === \"farmer\" && (\n                <Grid item xs={12}>\n                  <FormControl className='textfield' color=\"success\" sx={{ width: \"100%\" }}>\n                    <InputLabel id=\"demo-simple-select-helper-label\">\n                      Producer Type\n                    </InputLabel>\n                    <Select\n                      sx={{ fontSize: \"1.3rem\" }}\n                      labelId=\"demo-simple-select-helper-label\"\n                      id=\"demo-simple-select-helper\"\n                      value={data.farmertype}\n                      label=\"farmertype\"\n                      name=\"farmertype\"\n                      onChange={handleChange}\n                    >\n                      <MenuItem value=\"\">\n                        <em>None</em>\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"farmers\"}\n                      >\n                        Farmer\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"Organic farmers\"}\n                      >\n                        Organic Farmer\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"FPO/FPC\"}\n                      >\n                        FPO/FPC\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"Retailer\"}\n                      >\n                        Retailer\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"Wholesaler\"}\n                      >\n                        Wholesaler\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"Start-up\"}\n                      >\n                        Start Up\n                      </MenuItem>\n                      <MenuItem\n                        sx={{ fontSize: \"1.3rem\", fontFamily: \"monospace\" }}\n                        value={\"Vocal for local producers\"}\n                      >\n                        Vocal for Local Producers\n                      </MenuItem>\n                    </Select>\n                  </FormControl>\n                </Grid>\n              )}\n\n              <Grid item xs={12}>\n                <TextField\n                  inputlabelprops={{\n                    style: { fontSize: 14, fontFamily: \"monospace\" },\n                  }}\n                  fullWidth\n                  name=\"address\"\n                  label=\"address (optional)\"\n                  type=\"address\"\n                  id=\"address\"\n                  value={data.address}\n                  onChange={handleChange}\n                  autoComplete=\"new-address\"\n                  color=\"success\"\n                  className=\"textfield\"\n                />\n              </Grid>\n              {data.type === \"farmer\" && (\n                <Grid item xs={12}>\n                  <ReactTags\n                    InputProps={{ style: { fontSize: 15 } }}\n                    inputlabelprops={{ style: { fontSize: 15 } }}\n                    tags={tags}\n                    delimiters={delimiters}\n                    handleDelete={handleDelete}\n                    handleAddition={handleAddition}\n                    handleDrag={handleDrag}\n                    inputFieldPosition=\"bottom\"\n                    autocomplete\n                    color=\"success\" \n              className='textfield'\n                    placeholder=\"Add Selling Products Names and press enter\"\n                  />\n                </Grid>\n              )}\n            </Grid>\n            {error !== \"no error\" && (\n              <h3\n                style={{ alignSelf: \"center\", color: \"red\", marginTop: \"10px\" }}\n              >\n                {error}\n              </h3>\n            )}\n            <Button\n              type=\"submit\"\n              fullWidth\n              className=\"signup-btn\"\n              variant=\"contained\"\n              color=\"success\"\n              size=\"large\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Register\n            </Button>\n            <Grid container justifyContent=\"center\">\n              <Grid item>\n                <Link className=\"form-link\" to=\"/login\" variant=\"body2\">\n                  Already have an account? <span className=\"login\">Log In</span>\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      ) : (\n        <Spinner />\n      )}\n    </div>\n  );\n}\n"],"names":["user","AuthService","delimiters","Register","useEffect","window","location","reload","navigate","useNavigate","useState","Loading","setLoading","phone","password","firstname","lastname","type","farmertype","address","data","setData","React","tags","setTags","error","seterror","handleChange","e","target","name","value","prev","className","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","color","src","alt","component","noValidate","onSubmit","event","preventDefault","match","length","then","toast","progress","undefined","setTimeout","sx","mt","variant","container","spacing","item","xs","sm","inputlabelprops","style","fontSize","fontFamily","autoComplete","onChange","required","fullWidth","id","label","autoFocus","width","labelId","InputProps","handleDelete","i","filter","tag","index","handleAddition","handleDrag","currPos","newPos","newTags","slice","splice","inputFieldPosition","autocomplete","placeholder","alignSelf","marginTop","size","mb","justifyContent","to"],"sourceRoot":""}